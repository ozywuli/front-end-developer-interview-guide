(window.webpackJsonp=window.webpackJsonp||[]).push([[135],{322:function(e,t,a){"use strict";a.r(t);var r=a(0),n=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"content"},[a("h2",{attrs:{id:"feature-detection"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#feature-detection","aria-hidden":"true"}},[e._v("#")]),e._v(" Feature detection")]),e._v(" "),a("ul",[a("li",[e._v("Feature detection is checking if a browser supports a feature or if a feature is enabled. If not, provide a form of fallback.")]),e._v(" "),a("li",[e._v("Modernizr is probably the most popular library for feature detection")]),e._v(" "),a("li",[e._v("Some common features to check for are touchevents, geolocation, localstorage...")])]),e._v(" "),a("h2",{attrs:{id:"feature-inference"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#feature-inference","aria-hidden":"true"}},[e._v("#")]),e._v(" Feature inference")]),e._v(" "),a("p",[e._v("Feature inference is when you assume one feature exists because another one exists. This is bad practice because you can never be 100% sure.")]),e._v(" "),a("h2",{attrs:{id:"ua-string"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ua-string","aria-hidden":"true"}},[e._v("#")]),e._v(" UA string")]),e._v(" "),a("p",[e._v("UA is a string text of data that each browser sends and can be accessed with "),a("code",[e._v("navigator.userAgent")]),e._v(". This contains info about the browser environment.")])])}],!1,null,null,null);t.default=n.exports}}]);