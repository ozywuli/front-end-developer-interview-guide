(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{222:function(t,e,a){"use strict";a.r(e);var s=a(0),i=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"content"},[a("ul",[a("li",[t._v("Flux is an architecture for unidirectional or one-way data flow.")]),t._v(" "),a("li",[t._v("If any data needs to be updated, the flow starts all over from the beginning.")]),t._v(" "),a("li",[t._v("This solves the issue of multiple models updating multiple views at the same time.")])]),t._v(" "),a("p",[t._v("Actions -> dispatchers -> store -> view")]),t._v(" "),a("h2",{attrs:{id:"action-creator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#action-creator","aria-hidden":"true"}},[t._v("#")]),t._v(" Action creator")]),t._v(" "),a("ul",[a("li",[t._v('the "telegraph operator"')]),t._v(" "),a("li",[t._v("creates an action with a type and a payload")]),t._v(" "),a("li",[t._v("types are usually constants stored in a single file. this is helpful not only because it keeps things organize but also allows you to look over all the possible state changes in the codebase")]),t._v(" "),a("li",[t._v("actions can be asynchronous")])]),t._v(" "),a("h2",{attrs:{id:"dispatcher"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dispatcher","aria-hidden":"true"}},[t._v("#")]),t._v(" Dispatcher")]),t._v(" "),a("ul",[a("li",[t._v("mutaters, reducers")]),t._v(" "),a("li",[t._v("updates stores synchronously")]),t._v(" "),a("li",[t._v("subscribes to actions")]),t._v(" "),a("li",[t._v("filters out what it cares about")])]),t._v(" "),a("h2",{attrs:{id:"store"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#store","aria-hidden":"true"}},[t._v("#")]),t._v(" Store")]),t._v(" "),a("ul",[a("li",[t._v("a global singleton that holds the state of the application")]),t._v(" "),a("li",[t._v("to change its state, you must follow proper procedure")])])])}],!1,null,null,null);e.default=i.exports}}]);